name: ocelot.social CI


on: [push]

jobs:
  ##############################################################################
  # JOB: PREPARE #####################################################
  ##############################################################################
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    # needs: [nothing]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # TODO: DO STUFF ??? #####################################################
      ##########################################################################
      - name: Check translation files
        run: |
          scripts/translations/sort.sh
          scripts/translations/missing-keys.sh

  ##############################################################################
  # JOB: DOCKER BUILD TEST NEO4J ###############################################
  ##############################################################################
  build_test_neo4j:
    name: Docker Build Test - Neo4J
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # NEO4J ##################################################################
      ##########################################################################
      - name: Neo4J | Build `community` image
        run: |
          docker build --target community -t "ocelotsocialnetwork/neo4j:latest" neo4j/
          docker save "ocelotsocialnetwork/neo4j:latest" > /tmp/neo4j.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-neo4j-image
          path: /tmp/neo4j.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST BACKEND #############################################
  ##############################################################################
  build_test_backend:
    name: Docker Build Test - Backend
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # BUILD BACKEND DOCKER IMAGE (build) #####################################
      ##########################################################################
      - name: backend | Build `build` image
        run: |
          docker build --target build -t "ocelotsocialnetwork/backend:latest" backend/
          docker save "ocelotsocialnetwork/backend:latest" > /tmp/backend.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-backend-image
          path: /tmp/backend.tar

  ##############################################################################
  # JOB: DOCKER BUILD TEST WEBAPP ##############################################
  ##############################################################################
  build_test_webapp:
    name: Docker Build Test - WebApp
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # BUILD WEBAPP DOCKER IMAGE (build) ######################################
      ##########################################################################
      - name: webapp | Build `build` image
        run: |
          docker build --target build -t "ocelotsocialnetwork/webapp:latest" webapp/
          docker save "ocelotsocialnetwork/webapp:latest" > /tmp/webapp.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-webapp-image
          path: /tmp/webapp.tar

  ##############################################################################
  # JOB: LINT BACKEND ##########################################################
  ##############################################################################
  lint_backend:
    name: Lint backend
    runs-on: ubuntu-latest
    needs: [build_test_backend]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # DOWNLOAD DOCKER IMAGE ##################################################
      ##########################################################################
      - name: Download Docker Image (Backend)
        uses: actions/download-artifact@v2
        with:
          name: docker-backend-image
          path: /tmp/backend.tar
      - name: Load Docker Image
        run: docker load < /tmp/backend.tar
      ##########################################################################
      # LINT BACKEND ###########################################################
      ##########################################################################
      - name: backend | Lint
        run: docker run --rm ocelotsocialnetwork/backend:build yarn run lint

  ##############################################################################
  # JOB: LINT WEBAPP ###########################################################
  ##############################################################################
  lint_webapp:
    name: Lint webapp
    runs-on: ubuntu-latest
    needs: [build_test_webapp]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # DOWNLOAD DOCKER IMAGE ##################################################
      ##########################################################################
      - name: Download Docker Image (Webapp)
        uses: actions/download-artifact@v2
        with:
          name: docker-webapp-image
          path: /tmp/webapp.tar
      - name: Load Docker Image
        run: docker load < /tmp/webapp.tar
      ##########################################################################
      # LINT WEBAPP ############################################################
      ##########################################################################
      - name: webapp | Lint
        run: docker run --rm ocelotsocialnetwork/webapp:build yarn run lint

  ##############################################################################
  # JOB: UNIT TEST BACKEND #####################################################
  ##############################################################################
  unit_test_backend:
    name: Unit tests - backend
    runs-on: ubuntu-latest
    needs: [build_test_neo4j,build_test_backend]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # DOWNLOAD DOCKER IMAGES #################################################
      ##########################################################################
      - name: Download Docker Image (Neo4J)
        uses: actions/download-artifact@v2
        with:
          name: docker-neo4j-image
          path: /tmp/neo4j.tar
      - name: Load Docker Image
        run: docker load < /tmp/neo4j.tar
      - name: Download Docker Image (Backend)
        uses: actions/download-artifact@v2
        with:
          name: docker-backend-image
          path: /tmp/backend.tar
      - name: Load Docker Image
        run: docker load < /tmp/backend.tar
      ##########################################################################
      # UNIT TESTS BACKEND #####################################################
      ##########################################################################
      - name: backend | copy env files (webapp, backend)
        run: cp webapp/.env.template webapp/.env
        run: cp backend/.env.template backend/.env
      - name: backend | docker-compose
        run: docker-compose up
      - name: backend | Unit tests
        run: docker-compose exec backend yarn test
        #run: docker run --network container:webapp-frontend appropriate/curl -s --retry 10 --retry-connrefused http://localhost:5000/

  ##############################################################################
  # JOB: UNIT TEST WEBAPP ######################################################
  ##############################################################################
  unit_test_webapp:
    name: Unit tests - webapp
    runs-on: ubuntu-latest
    needs: [build_test_webapp]
    steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      - name: Checkout code
        uses: actions/checkout@v2
      ##########################################################################
      # DOWNLOAD DOCKER IMAGES #################################################
      ##########################################################################
      - name: Download Docker Image (Webapp)
        uses: actions/download-artifact@v2
        with:
          name: docker-webapp-image
          path: /tmp/webapp.tar
      - name: Load Docker Image
        run: docker load < /tmp/webapp.tar
      ##########################################################################
      # UNIT TESTS WEBAPP #####################################################
      ##########################################################################
      - name: webapp | Unit tests
        run: docker run --rm ocelotsocialnetwork/webapp:build yarn run test

  ##############################################################################
  # JOB: DOCKER BUILD PRODUCTION & PUSH ########################################
  ##############################################################################
  #build_production:
  #  name: Docker Build Production & Push
  #  runs-on: ubuntu-latest
  #  needs: prepare
  #  steps:
      ##########################################################################
      # CHECKOUT CODE ##########################################################
      ##########################################################################
      #- name: Checkout code
      #  uses: actions/checkout@v2
      ##########################################################################
      # BACKEND ################################################################
      ##########################################################################
      # TODO: We want to push this to dockerhub
      #- name: Build backend production image
      #  uses: docker/build-push-action@v1.1.0
      #  with:
      #    repository: ocelotsocialnetwork/backend
      #    tags: production
      #    target: production
      #    path: backend/
      #    push: false

      ##########################################################################
      # WEBAPP #################################################################
      ##########################################################################
      # TODO: We want to push this to dockerhub
      #- name: Build webapp production image
      #  uses: docker/build-push-action@v1.1.0
      #  with:
      #    repository: ocelotsocialnetwork/webapp
      #    tags: production
      #    target: production
      #    path: webapp/
      #    push: false